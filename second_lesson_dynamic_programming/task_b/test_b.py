import pytest
from io import StringIO
import sys
from b import main


@pytest.mark.parametrize('input_data, answer', [
      # 1Ô∏è‚É£ –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –∏–∑ —É—Å–ª–æ–≤–∏—è
    ('LLBLRRBRL', 5),

    # 3Ô∏è‚É£ –í—Å–µ –ø—Ä–∏—Ç–æ–∫–∏ —Å –ª–µ–≤–æ–≥–æ –±–µ—Ä–µ–≥–∞ ‚Äî –ø–µ—Ä–µ–ø—Ä–∞–≤–ª—è–µ–º—Å—è 1 —Ä–∞–∑ –≤ –Ω–∞—á–∞–ª–µ
    ('LLLLL', 1),

    # 4Ô∏è‚É£ –í—Å–µ –ø—Ä–∏—Ç–æ–∫–∏ —Å –ø—Ä–∞–≤–æ–≥–æ –±–µ—Ä–µ–≥–∞ ‚Äî –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ø—Ä–∞–≤—ã–π –±–µ—Ä–µ–≥ (1 –ø–µ—Ä–µ–ø—Ä–∞–≤–∞), –∞ –ø–æ—Ç–æ–º –Ω–∞–∑–∞–¥ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è
    ('RRRRR', 1),

    # 5Ô∏è‚É£ –í—Å–µ –ø—Ä–∏—Ç–æ–∫–∏ —Å –æ–±–æ–∏—Ö –±–µ—Ä–µ–≥–æ–≤ (—Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ) ‚Äî –ø—Ä–∏–¥—ë—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –º–µ–Ω—è—Ç—å —Å—Ç–æ—Ä–æ–Ω—É
    ('BBBBB', 6),  # –æ–±–∞ –±–µ—Ä–µ–≥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã, –º–æ–∂–Ω–æ –∏–¥—Ç–∏ –±–µ–∑ –ø–µ—Ä–µ–ø—Ä–∞–≤

    # 6Ô∏è‚É£ –ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ –ª–µ–≤–æ–≥–æ –∏ –ø—Ä–∞–≤–æ–≥–æ –ø—Ä–∏—Ç–æ–∫–∞ ‚Äî —á–∞—Å—Ç—ã–µ —Å–º–µ–Ω—ã —Å—Ç–æ—Ä–æ–Ω—ã
    ('LRLRLR', 4),  # –Ω—É–∂–Ω–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø–µ—Ä–µ–ø—Ä–∞–≤–ª—è—Ç—å—Å—è

    # 7Ô∏è‚É£ –ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ —Å —É—á–∞—Å—Ç–∏–µ–º B ‚Äî —É–ø—Ä–æ—â–∞–µ—Ç –¥–≤–∏–∂–µ–Ω–∏–µ (B –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–ø—Ä–∞–≤—ã)
    ('LBRBRL', 5),

    # 8Ô∏è‚É£ –°–ª–æ–∂–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è ‚Äî —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    ('LLBLRRBRL', 5),

    # 9Ô∏è‚É£ –°–ª—É—á–∞–π —Å "–º–æ—Å—Ç–∞–º–∏" (B) –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
    ('BLLRBBRL', 6),

    # üîü –ö—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã (–≤—Å–µ —Å–∏–º–≤–æ–ª—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã, 200 —Å–∏–º–≤–æ–ª–æ–≤)
    ('L' * 200, 1),
])
def test_h(input_data, answer):
    sys.stdin = StringIO(input_data)
    
    result = main()
    assert result == answer

